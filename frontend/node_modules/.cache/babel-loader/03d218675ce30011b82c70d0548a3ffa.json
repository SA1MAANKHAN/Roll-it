{"ast":null,"code":"var _jsxFileName = \"/Users/salmaankhan/Documents/Github/Roll-it/frontend/src/components/playArea/playArea.compnent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createRef, useState } from \"react\";\nimport SubPlayArea from \"../subPlayArea/subPlayArea.component\";\nimport \"./playArea.styles.scss\";\nimport Dice1 from \"../../assets/images/Die/dice-1.png\";\nimport Dice2 from \"../../assets/images/Die/dice-2.png\";\nimport Dice3 from \"../../assets/images/Die/dice-3.png\";\nimport Dice4 from \"../../assets/images/Die/dice-4.png\";\nimport Dice5 from \"../../assets/images/Die/dice-5.png\";\nimport Dice6 from \"../../assets/images/Die/dice-6.png\";\nimport { PLAYER_TURNS } from \"../../utils/contants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlayArea(_ref) {\n  _s();\n\n  let {\n    winningPoints\n  } = _ref;\n  const [diceImgs] = useState([Dice1, Dice2, Dice3, Dice4, Dice5, Dice6]);\n  const [currentDiceNumber, setcurrentDiceNumber] = useState(null);\n  const [currentTurn, setcurrentTurn] = useState(PLAYER_TURNS.PLAYER_1);\n  const [totalScorePlayer1, settotalScorePlayer1] = useState(0);\n  const [currentScorePlayer1, setcurrentScorePlayer1] = useState(0);\n  const [totalScorePlayer2, settotalScorePlayer2] = useState(0);\n  const [currentScorePlayer2, setcurrentScorePlayer2] = useState(0);\n\n  function rollTheDice() {\n    const num = Math.ceil(Math.random() * 6); // show correct Dice\n\n    setcurrentDiceNumber(num); // get a random number\n\n    const luckFactor = Math.floor(Math.random() * 100);\n\n    if (luckFactor % 5 === 0) {\n      console.log(\"turn changes\"); // player losses current score\n\n      if (currentTurn === PLAYER_TURNS.PLAYER_1) {\n        setcurrentScorePlayer1(0);\n      } else {\n        setcurrentScorePlayer2(0);\n      }\n\n      changeTurns();\n      return;\n    }\n\n    if (currentTurn === PLAYER_TURNS.PLAYER_1) {\n      // increase current score for player 1\n      setcurrentScorePlayer1(currentScorePlayer1 + num);\n    } else {\n      // increase current score for player 2\n      setcurrentScorePlayer2(currentScorePlayer2 + num);\n    }\n  }\n\n  function saveToTotal() {\n    if (currentTurn === PLAYER_TURNS.PLAYER_1) {\n      settotalScorePlayer1(totalScorePlayer1 + currentScorePlayer1);\n      setcurrentScorePlayer1(0);\n    } else {\n      settotalScorePlayer2(totalScorePlayer2 + currentScorePlayer2);\n      setcurrentScorePlayer2(0);\n    }\n\n    changeTurns();\n  }\n\n  function changeTurns() {\n    if (currentTurn == PLAYER_TURNS.PLAYER_1) setcurrentTurn(PLAYER_TURNS.PLAYER_2);\n    if (currentTurn == PLAYER_TURNS.PLAYER_2) setcurrentTurn(PLAYER_TURNS.PLAYER_1);\n  }\n\n  function resetGame() {\n    setcurrentDiceNumber(null);\n    setcurrentTurn(PLAYER_TURNS.PLAYER_1);\n    settotalScorePlayer1(0);\n    setcurrentScorePlayer1(0);\n    settotalScorePlayer2(0);\n    setcurrentScorePlayer2(0);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playArea\",\n    children: [currentDiceNumber ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: diceImgs[currentDiceNumber - 1],\n      alt: \"\",\n      className: \"dice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetGame,\n      className: \"newGame\",\n      children: \"\\uD83D\\uDD04 \\xA0\\xA0 New game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: rollTheDice,\n      className: \"rollDice\",\n      children: \"\\uD83C\\uDFB2 \\xA0\\xA0 Roll dice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveToTotal,\n      className: \"hold\",\n      children: \"\\uD83D\\uDCE5 \\xA0\\xA0 Take\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SubPlayArea, {\n      name: \"Player One\",\n      totalScore: totalScorePlayer1,\n      currentScore: currentScorePlayer1,\n      active: currentTurn == PLAYER_TURNS.PLAYER_1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SubPlayArea, {\n      name: \"Player Two\",\n      totalScore: totalScorePlayer2,\n      currentScore: currentScorePlayer2,\n      active: currentTurn == PLAYER_TURNS.PLAYER_2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PlayArea, \"ZjHeDakg5m982Y6FoPgMtJp4eMY=\");\n\n_c = PlayArea;\nexport default PlayArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayArea\");","map":{"version":3,"names":["React","createRef","useState","SubPlayArea","Dice1","Dice2","Dice3","Dice4","Dice5","Dice6","PLAYER_TURNS","PlayArea","winningPoints","diceImgs","currentDiceNumber","setcurrentDiceNumber","currentTurn","setcurrentTurn","PLAYER_1","totalScorePlayer1","settotalScorePlayer1","currentScorePlayer1","setcurrentScorePlayer1","totalScorePlayer2","settotalScorePlayer2","currentScorePlayer2","setcurrentScorePlayer2","rollTheDice","num","Math","ceil","random","luckFactor","floor","console","log","changeTurns","saveToTotal","PLAYER_2","resetGame"],"sources":["/Users/salmaankhan/Documents/Github/Roll-it/frontend/src/components/playArea/playArea.compnent.jsx"],"sourcesContent":["import React, { createRef, useState } from \"react\";\nimport SubPlayArea from \"../subPlayArea/subPlayArea.component\";\n\nimport \"./playArea.styles.scss\";\n\nimport Dice1 from \"../../assets/images/Die/dice-1.png\";\nimport Dice2 from \"../../assets/images/Die/dice-2.png\";\nimport Dice3 from \"../../assets/images/Die/dice-3.png\";\nimport Dice4 from \"../../assets/images/Die/dice-4.png\";\nimport Dice5 from \"../../assets/images/Die/dice-5.png\";\nimport Dice6 from \"../../assets/images/Die/dice-6.png\";\nimport { PLAYER_TURNS } from \"../../utils/contants\";\n\nfunction PlayArea({winningPoints}) {\n  const [diceImgs] = useState([Dice1, Dice2, Dice3, Dice4, Dice5, Dice6]);\n\n  const [currentDiceNumber, setcurrentDiceNumber] = useState(null);\n\n  const [currentTurn, setcurrentTurn] = useState(PLAYER_TURNS.PLAYER_1);\n\n  const [totalScorePlayer1, settotalScorePlayer1] = useState(0);\n  const [currentScorePlayer1, setcurrentScorePlayer1] = useState(0);\n\n  const [totalScorePlayer2, settotalScorePlayer2] = useState(0);\n  const [currentScorePlayer2, setcurrentScorePlayer2] = useState(0);\n\n  function rollTheDice() {\n    const num = Math.ceil(Math.random() * 6);\n    // show correct Dice\n    setcurrentDiceNumber(num);\n\n    // get a random number\n    const luckFactor = Math.floor(Math.random() * 100);\n    if (luckFactor % 5 === 0) {\n      console.log(\"turn changes\");\n      // player losses current score\n      if (currentTurn === PLAYER_TURNS.PLAYER_1) {\n        setcurrentScorePlayer1(0);\n      } else {\n        setcurrentScorePlayer2(0);\n      }\n      changeTurns();\n      return;\n    }\n\n    if (currentTurn === PLAYER_TURNS.PLAYER_1) {\n      // increase current score for player 1\n      setcurrentScorePlayer1(currentScorePlayer1 + num);\n    } else {\n      // increase current score for player 2\n      setcurrentScorePlayer2(currentScorePlayer2 + num);\n    }\n  }\n\n  function saveToTotal() {\n    if (currentTurn === PLAYER_TURNS.PLAYER_1) {\n      settotalScorePlayer1(totalScorePlayer1 + currentScorePlayer1);\n      setcurrentScorePlayer1(0);\n    } else {\n      settotalScorePlayer2(totalScorePlayer2 + currentScorePlayer2);\n      setcurrentScorePlayer2(0);\n    }\n\n    changeTurns();\n  }\n\n  function changeTurns() {\n    if (currentTurn == PLAYER_TURNS.PLAYER_1)\n      setcurrentTurn(PLAYER_TURNS.PLAYER_2);\n    if (currentTurn == PLAYER_TURNS.PLAYER_2)\n      setcurrentTurn(PLAYER_TURNS.PLAYER_1);\n  }\n\n  function resetGame() {\n    setcurrentDiceNumber(null);\n    setcurrentTurn(PLAYER_TURNS.PLAYER_1);\n    settotalScorePlayer1(0);\n    setcurrentScorePlayer1(0);\n    settotalScorePlayer2(0);\n    setcurrentScorePlayer2(0);\n  }\n\n  return (\n    <div className=\"playArea\">\n      {currentDiceNumber ? (\n        <img src={diceImgs[currentDiceNumber - 1]} alt=\"\" className=\"dice\" />\n      ) : (\n        \"\"\n      )}\n      <button onClick={resetGame} className=\"newGame\">\n        ðŸ”„ &nbsp;&nbsp; New game\n      </button>\n      <button onClick={rollTheDice} className=\"rollDice\">\n        ðŸŽ² &nbsp;&nbsp; Roll dice\n      </button>\n      <button onClick={saveToTotal} className=\"hold\">\n        ðŸ“¥ &nbsp;&nbsp; Take\n      </button>\n      <SubPlayArea\n        name={\"Player One\"}\n        totalScore={totalScorePlayer1}\n        currentScore={currentScorePlayer1}\n        active={currentTurn == PLAYER_TURNS.PLAYER_1}\n      />\n      <SubPlayArea\n        name={\"Player Two\"}\n        totalScore={totalScorePlayer2}\n        currentScore={currentScorePlayer2}\n        active={currentTurn == PLAYER_TURNS.PLAYER_2}\n      />\n    </div>\n  );\n}\n\nexport default PlayArea;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}